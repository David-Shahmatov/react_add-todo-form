{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","visibleTodos","todosId","App","useState","setUserId","setTitle","isCorrectTitle","setIsCorrectTitle","isCorrectUserId","setIsCorrectUserId","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","push","getTodo","htmlFor","type","placeholder","onChange","target","value","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29016d64.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title, completed, user, id,\n  } = todo;\n\n  return (\n    <>\n      <article\n        data-id={id}\n        className={classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n        )}\n      >\n        <h2 className=\"TodoInfo__title\">{title}</h2>\n        {user && <UserInfo user={user} />}\n      </article>\n    </>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst visibleTodos: Todo[] = todosFromServer\n  .map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\nconst todosId = visibleTodos.map(({ id }) => id);\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [isCorrectTitle, setIsCorrectTitle] = useState(true);\n  const [isCorrectUserId, setIsCorrectUserId] = useState(true);\n\n  const getTodo = () => {\n    const newTodo = {\n      id: Math.max(...todosId) + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    visibleTodos.push(newTodo);\n\n    setUserId(0);\n    setTitle('');\n  };\n\n  const handleChangeUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+(event.target.value));\n    setIsCorrectUserId(true);\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsCorrectTitle(true);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setIsCorrectUserId(false);\n    }\n\n    if (!title.trim()) {\n      setIsCorrectTitle(false);\n    }\n\n    if (!userId || !title.trim()) {\n      return;\n    }\n\n    getTodo();\n\n    setIsCorrectTitle(true);\n    setIsCorrectUserId(true);\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleID\">\n            <span>{'Title: '}</span>\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              onChange={handleChangeTitle}\n              value={title}\n              id=\"titleID\"\n            />\n            {\n              !isCorrectTitle\n                && <span className=\"error\">Please enter a title</span>\n            }\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectId\">\n            <span>{'User: '}</span>\n            <select\n              data-cy=\"userSelect\"\n              onChange={handleChangeUserId}\n              defaultValue={userId}\n              value={userId}\n              id=\"selectId\"\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {\n                usersFromServer.map(({ name, id }) => (\n                  <option\n                    value={id}\n                    key={id}\n                  >\n                    {name}\n                  </option>\n                ))\n              }\n            </select>\n\n            {\n              isCorrectUserId\n                || <span className=\"error\">Please choose a user</span>\n            }\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}